<?php

/**
 * @file
 * GovDelivery Taxonomy Module
 */

/**
 * Implements hook_taxonomy_term_insert().
 */
function govdelivery_taxonomy_taxonomy_term_insert($term) {
  $name = trim($term->getName());
  $tid = $term->id();
  $client = \Drupal::httpClient();
  $topic_result = govdelivery_taxonomy_add_topic($name, $tid, $client);
  dpm($topic_result, '$topic_result');
  $category_result = govdelivery_taxonomy_categorize_topic($tid, $client);
  dpm($category_result, '$category_result');
}

/**
 * GovDelivery API Call.
 *
 * Adds a taxonomy term as a topic to GovDelivery.
 *
 * @return array
 *   HTTP response;
 */
function govdelivery_taxonomy_add_topic($name, $tid, $client = FALSE) {
  $config = \Drupal::config('govdelivery_taxonomy.settings');
  $drupalserver = $config->get('drupalserver');
  $xml = <<<XML
<topic>
  <name>{$name}</name>
  <short-name>{$name}</short-name>
  <description>Subscribe to the Term {$name}</description>
  <code>DRUPALTERM_{$tid}</code>
  <pagewatch-autosend type="boolean">true</pagewatch-autosend>
  <pagewatch-enabled type="boolean">true</pagewatch-enabled>
  <pagewatch-suspended type="boolean">false</pagewatch-suspended>
  <pagewatch-type type="integer">2</pagewatch-type>
  <pages type="array">
    <page>
      <url>http://{$drupalserver}/taxonomy/term/{$tid}/feed</url>
    </page>
  </pages>
  <visibility>Listed</visibility>
  <default-pagewatch-results type="integer" nil="true"></default-pagewatch-results>
</topic>
XML;

  if (empty($client)) {
    $client = \Drupal::httpClient();
  }
  $url = 'https://' . $config->get('server') . '/api/account/' . $config->get('clientcode') . '/topics.xml';

  $response = $client->request('POST', $url, [
    'headers' => [
      'Content-Type' => 'text/xml; charset=UTF-8',
      'Accept' => 'text/xml',
    ],
    'auth' => [
      $config->get('username'),
      $config->get('password')
    ],
    'body' => $xml,
  ]);

  $body = $response->getBody();
  $contents = $body->getContents();
  return $contents;
}

/**
 * Add category information for topic.
 *
 * @param string $tid
 *   The topic ID.
 *
 * @return array
 *   HTTP response;
 * @todo
 */
function govdelivery_taxonomy_categorize_topic($tid, $client = NULL) {
  $config = \Drupal::config('govdelivery_taxonomy.settings');

  $category = $config->get('category');
  $xml = <<<XML
<topic>
  <categories type="array">
    <category>
      <code>{$category}</code>
    </category>
  </categories>
</topic>
XML;

  
  if (empty($client)) {
    $client = \Drupal::httpClient();
  }
  $url = 'https://' . $config->get('server') . '/api/account/' . $config->get('clientcode') . '/topics/DRUPALTERM_' . $tid . '/categories.xml';

  $response = $client->request('PUT', $url, [
    'headers' => [
      'Content-Type' => 'text/xml; charset=UTF-8',
      'Accept' => 'text/xml',
    ],
    'auth' => [
      $config->get('username'),
      $config->get('password')
    ],
    'body' => $xml,
  ]);

  $body = $response->getBody();
  $contents = $body->getContents();
  return $contents;
}

/**
 * fetch and cache a list of categories
 */
function govdelivery_taxonomy_get_categories($client = NULL, $reset = FALSE) {
  $config = \Drupal::config('govdelivery_taxonomy.settings');
  $cid = 'govdelivery_taxonomy_categories:' . $config->get('server') . ':' . $config->get('clientcode');

  $data = NULL;
  if (($cache = \Drupal::cache()->get($cid)) && !$reset) {
    $data = $cache->data;
  }
  else {
    try {
      if (empty($client)) {
        $client = \Drupal::httpClient();
      }
      $url = 'https://' . $config->get('server') . '/api/account/' . $config->get('clientcode') . '/categories.xml';
      $response = $client->request('GET', $url, [
        'auth' => [
          $config->get('username'),
          $config->get('password')
        ],
      ]);

      $body = $response->getBody();
      $xml = $body->getContents();
      $simplexml = new SimpleXMLElement($xml);
      $data = json_decode(json_encode($simplexml))->category;
    }
    catch (Exception $e) {
      \Drupal::logger('govdelivery')->error('the following error occurred: <pre>!error</pre>', array('@error' => print_r($e, TRUE)));
      watchdog_exception('govdelivery', $e);
      $data = [];
    }

    // don't cache if we have no data
    if (!empty($data)) {
      \Drupal::cache()->set($cid, $data);
    }
  }

  return $data;
}
